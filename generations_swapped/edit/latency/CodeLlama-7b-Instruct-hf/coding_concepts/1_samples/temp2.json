{
	"non_functional_requirement": "framerate",
	"commit": "https:\/\/github.com\/onyxbits\/listmyaps\/commit\/5065990868de934c2c9aa5dfce01b69b362eb94e",
	"commit_message": "'\\\\\"BUGFIX: Recycle views to scroll faster\\\\n\\\\\"'",
	"source_code": "package de.onyxbits.listmyapps;\n\nimport java.util.List;\n\nimport android.content.Context;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ArrayAdapter;\nimport android.widget.CheckBox;\nimport android.widget.TextView;\n\npublic class AppAdapter extends ArrayAdapter<SortablePackageInfo> {\n\n\tpublic AppAdapter(Context context, int textViewResourceId,\n\t\t\tList<SortablePackageInfo> spi) {\n\t\tsuper(context, textViewResourceId, spi);\n\t}\n\t\n  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    View ret;\n    SortablePackageInfo spi = getItem(position);\n    \n    LayoutInflater inflater = (LayoutInflater)getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n    ret = inflater.inflate(R.layout.app_item,null);\n    ((TextView)ret.findViewById(R.id.appname)).setText(spi.displayName);\n    ((TextView)ret.findViewById(R.id.apppackage)).setText(spi.packageName);\n    CheckBox sel = ((CheckBox)ret.findViewById(R.id.selected));\n    sel.setOnClickListener(spi);\n    sel.setChecked(spi.selected);\n    return ret;\n\n  }\n\n}\n",
	"target_code": "package de.onyxbits.listmyapps;\n\nimport java.util.List;\n\nimport android.content.Context;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ArrayAdapter;\nimport android.widget.CheckBox;\nimport android.widget.TextView;\n\npublic class AppAdapter extends ArrayAdapter<SortablePackageInfo> {\n\n\tpublic AppAdapter(Context context, int textViewResourceId,\n\t\t\tList<SortablePackageInfo> spi) {\n\t\tsuper(context, textViewResourceId, spi);\n\t}\n\t\n  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    View ret=convertView;\n    if (ret==null) {\n    \tLayoutInflater inflater = (LayoutInflater)getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n    \tret = inflater.inflate(R.layout.app_item,null);\n    }\n    SortablePackageInfo spi = getItem(position);\n    \n    ((TextView)ret.findViewById(R.id.appname)).setText(spi.displayName);\n    ((TextView)ret.findViewById(R.id.apppackage)).setText(spi.packageName);\n    CheckBox sel = ((CheckBox)ret.findViewById(R.id.selected));\n    sel.setChecked(spi.selected);\n    sel.setOnClickListener(spi);\n    \n    return ret;\n\n  }\n\n}\n",
	"pl": "Java",
	"chain_of_thought": "Below is an instruction that describes a task along with an example. Write a response that appropriately completes the request.\n\n### Instruction:\nRewrite the given Java program to optimize and improve the frame rate. Write the entire code and no other text.\n```java\n\/* -*- Mode: Java; c-basic-offset: 4; tab-width: 20; indent-tabs-mode: nil; -*-\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http:\/\/mozilla.org\/MPL\/2.0\/. *\/\n\npackage org.mozilla.focus;\n\nimport android.app.Application;\nimport android.preference.PreferenceManager;\n\nimport org.mozilla.focus.search.SearchEngineManager;\nimport org.mozilla.focus.telemetry.TelemetryWrapper;\nimport org.mozilla.focus.utils.AdjustHelper;\n\npublic class FocusApplication extends Application {\n    @Override\n    public void onCreate() {\n        super.onCreate();\n\n        PreferenceManager.setDefaultValues(this, R.xml.settings, false);\n\n        SearchEngineManager.getInstance().init(this);\n\n        TelemetryWrapper.init(this);\n        AdjustHelper.setupAdjustIfNeeded(this);\n    }\n}\n```\n\n### Thought:\nThe onCreate() function performs necessary initializations such as loading certain preferences, and sets up SearchEngineManager instance. However, loading preferences depends on the Search Engine manager, because the default search engine preference uses the search engine manager; we therefore need to ensure that preferences aren't loaded until search engines are loaded, to avoid potential hangup of the application for a fresh install. The following optimized code first initializes the search engine manager and then loads preferences.\n\n### Response:\n ```java\n \/* -*- Mode: Java; c-basic-offset: 4; tab-width: 20; indent-tabs-mode: nil; -*-\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http:\/\/mozilla.org\/MPL\/2.0\/. *\/\n\npackage org.mozilla.focus;\n\nimport android.app.Application;\nimport android.preference.PreferenceManager;\n\nimport org.mozilla.focus.search.SearchEngineManager;\nimport org.mozilla.focus.telemetry.TelemetryWrapper;\nimport org.mozilla.focus.utils.AdjustHelper;\n\npublic class FocusApplication extends Application {\n    @Override\n    public void onCreate() {\n        super.onCreate();\n\n        SearchEngineManager.getInstance().init(this);\n\n        PreferenceManager.setDefaultValues(this, R.xml.settings, false);\n\n        TelemetryWrapper.init(this);\n        AdjustHelper.setupAdjustIfNeeded(this);\n    }\n}\n```\n\n### Instruction:\nRewrite the given java program to optimize and improve the frame rate. Write the entire code and no other text in the response.\n```java\npackage de.onyxbits.listmyapps;\n\nimport java.util.List;\n\nimport android.content.Context;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ArrayAdapter;\nimport android.widget.CheckBox;\nimport android.widget.TextView;\n\npublic class AppAdapter extends ArrayAdapter<SortablePackageInfo> {\n\n\tpublic AppAdapter(Context context, int textViewResourceId,\n\t\t\tList<SortablePackageInfo> spi) {\n\t\tsuper(context, textViewResourceId, spi);\n\t}\n\t\n  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    View ret;\n    SortablePackageInfo spi = getItem(position);\n    \n    LayoutInflater inflater = (LayoutInflater)getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n    ret = inflater.inflate(R.layout.app_item,null);\n    ((TextView)ret.findViewById(R.id.appname)).setText(spi.displayName);\n    ((TextView)ret.findViewById(R.id.apppackage)).setText(spi.packageName);\n    CheckBox sel = ((CheckBox)ret.findViewById(R.id.selected));\n    sel.setOnClickListener(spi);\n    sel.setChecked(spi.selected);\n    return ret;\n\n  }\n\n}\n\n```\n\n### Thought:\n",
	"one_shot": "Below is an instruction that describes a task along with an example. Write a response that appropriately completes the request.\n\n### Instruction:\nRewrite the given Java program to optimize and improve the frame rate. Write the entire code and no other text.\n```java\n\/* -*- Mode: Java; c-basic-offset: 4; tab-width: 20; indent-tabs-mode: nil; -*-\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http:\/\/mozilla.org\/MPL\/2.0\/. *\/\n\npackage org.mozilla.focus;\n\nimport android.app.Application;\nimport android.preference.PreferenceManager;\n\nimport org.mozilla.focus.search.SearchEngineManager;\nimport org.mozilla.focus.telemetry.TelemetryWrapper;\nimport org.mozilla.focus.utils.AdjustHelper;\n\npublic class FocusApplication extends Application {\n    @Override\n    public void onCreate() {\n        super.onCreate();\n\n        PreferenceManager.setDefaultValues(this, R.xml.settings, false);\n\n        SearchEngineManager.getInstance().init(this);\n\n        TelemetryWrapper.init(this);\n        AdjustHelper.setupAdjustIfNeeded(this);\n    }\n}\n```\n### Response:\n ```java\n \/* -*- Mode: Java; c-basic-offset: 4; tab-width: 20; indent-tabs-mode: nil; -*-\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http:\/\/mozilla.org\/MPL\/2.0\/. *\/\n\npackage org.mozilla.focus;\n\nimport android.app.Application;\nimport android.preference.PreferenceManager;\n\nimport org.mozilla.focus.search.SearchEngineManager;\nimport org.mozilla.focus.telemetry.TelemetryWrapper;\nimport org.mozilla.focus.utils.AdjustHelper;\n\npublic class FocusApplication extends Application {\n    @Override\n    public void onCreate() {\n        super.onCreate();\n\n        SearchEngineManager.getInstance().init(this);\n\n        PreferenceManager.setDefaultValues(this, R.xml.settings, false);\n\n        TelemetryWrapper.init(this);\n        AdjustHelper.setupAdjustIfNeeded(this);\n    }\n}\n```\n\n### Instruction:\nRewrite the given java program to optimize and improve the frame rate. Write the entire code and no other text in the response.\n```java\npackage de.onyxbits.listmyapps;\n\nimport java.util.List;\n\nimport android.content.Context;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ArrayAdapter;\nimport android.widget.CheckBox;\nimport android.widget.TextView;\n\npublic class AppAdapter extends ArrayAdapter<SortablePackageInfo> {\n\n\tpublic AppAdapter(Context context, int textViewResourceId,\n\t\t\tList<SortablePackageInfo> spi) {\n\t\tsuper(context, textViewResourceId, spi);\n\t}\n\t\n  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    View ret;\n    SortablePackageInfo spi = getItem(position);\n    \n    LayoutInflater inflater = (LayoutInflater)getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n    ret = inflater.inflate(R.layout.app_item,null);\n    ((TextView)ret.findViewById(R.id.appname)).setText(spi.displayName);\n    ((TextView)ret.findViewById(R.id.apppackage)).setText(spi.packageName);\n    CheckBox sel = ((CheckBox)ret.findViewById(R.id.selected));\n    sel.setOnClickListener(spi);\n    sel.setChecked(spi.selected);\n    return ret;\n\n  }\n\n}\n\n```\n\n### Response:\n```java\n",
	"base_prompt": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n\n### Instruction:\nRewrite the given java program to optimize and improve the frame rate. Write the entire code and no other text in the response.\n```java\npackage de.onyxbits.listmyapps;\n\nimport java.util.List;\n\nimport android.content.Context;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ArrayAdapter;\nimport android.widget.CheckBox;\nimport android.widget.TextView;\n\npublic class AppAdapter extends ArrayAdapter<SortablePackageInfo> {\n\n\tpublic AppAdapter(Context context, int textViewResourceId,\n\t\t\tList<SortablePackageInfo> spi) {\n\t\tsuper(context, textViewResourceId, spi);\n\t}\n\t\n  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    View ret;\n    SortablePackageInfo spi = getItem(position);\n    \n    LayoutInflater inflater = (LayoutInflater)getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n    ret = inflater.inflate(R.layout.app_item,null);\n    ((TextView)ret.findViewById(R.id.appname)).setText(spi.displayName);\n    ((TextView)ret.findViewById(R.id.apppackage)).setText(spi.packageName);\n    CheckBox sel = ((CheckBox)ret.findViewById(R.id.selected));\n    sel.setOnClickListener(spi);\n    sel.setChecked(spi.selected);\n    return ret;\n\n  }\n\n}\n\n```\n\n### Response:\n```java\n",
	"coding_concepts": "Below is an instruction that describes a task. The instruction contains concepts formatted as a list of keyword and value pairs separated by newline. The list of concept keywords and their descriptions are:\n\n### Keywords:\n\n[in] What specific function or class to focus on to implement the required change(s).\n\n[+] What specific library, programming or data structure or design concept, or programmer-defined construct in the code to USE or ADD to implement the required change(s)\n\n[-] What specific library, programming or data structure or design concept, or programmer-defined construct in the code to NOT USE or REMOVE to implement the required change(s)\n\n[implement] What specific function to implement in the class of interest\n\n[override] What specific function of the parent class to override and implement in the class of interest\n\n[hint] Full or partial textual description of the idea to implement\n\nWrite a response that appropriately completes the request.\n\n### Instruction:\nRewrite the code to make scrolling faster and improve user experience of the android application. Write the entire code and no other text in the response.\n\n### Concepts:\n[+] recycle convertView object\n\n### Given program:\n```java\npackage de.onyxbits.listmyapps;\n\nimport java.util.List;\n\nimport android.content.Context;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ArrayAdapter;\nimport android.widget.CheckBox;\nimport android.widget.TextView;\n\npublic class AppAdapter extends ArrayAdapter<SortablePackageInfo> {\n\n\tpublic AppAdapter(Context context, int textViewResourceId,\n\t\t\tList<SortablePackageInfo> spi) {\n\t\tsuper(context, textViewResourceId, spi);\n\t}\n\t\n  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    View ret;\n    SortablePackageInfo spi = getItem(position);\n    \n    LayoutInflater inflater = (LayoutInflater)getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n    ret = inflater.inflate(R.layout.app_item,null);\n    ((TextView)ret.findViewById(R.id.appname)).setText(spi.displayName);\n    ((TextView)ret.findViewById(R.id.apppackage)).setText(spi.packageName);\n    CheckBox sel = ((CheckBox)ret.findViewById(R.id.selected));\n    sel.setOnClickListener(spi);\n    sel.setChecked(spi.selected);\n    return ret;\n\n  }\n\n}\n\n```\n\n### Response:\n```java\n",
	"classification_left_prompt": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n### Instruction:\n\nOnly one of the two code snippets has a lower frame rate.\n\nCode-A:\n\/* -*- Mode: Java; c-basic-offset: 4; tab-width: 20; indent-tabs-mode: nil; -*-\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http:\/\/mozilla.org\/MPL\/2.0\/. *\/\n\npackage org.mozilla.focus;\n\nimport android.app.Application;\nimport android.preference.PreferenceManager;\n\nimport org.mozilla.focus.search.SearchEngineManager;\nimport org.mozilla.focus.telemetry.TelemetryWrapper;\nimport org.mozilla.focus.utils.AdjustHelper;\n\npublic class FocusApplication extends Application {\n    @Override\n    public void onCreate() {\n        super.onCreate();\n\n        \/\/ Loading preferences depends on the Search Engine manager, because the default search\n        \/\/ engine pref uses the search engine manager - we therefore need to ensure\n        \/\/ that prefs aren't loaded until search engines are loaded.\n        SearchEngineManager.getInstance().init(this);\n\n        PreferenceManager.setDefaultValues(this, R.xml.settings, false);\n\n        TelemetryWrapper.init(this);\n        AdjustHelper.setupAdjustIfNeeded(this);\n    }\n}\n\n\nCode-B:\n\/* -*- Mode: Java; c-basic-offset: 4; tab-width: 20; indent-tabs-mode: nil; -*-\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http:\/\/mozilla.org\/MPL\/2.0\/. *\/\n\npackage org.mozilla.focus;\n\nimport android.app.Application;\nimport android.preference.PreferenceManager;\n\nimport org.mozilla.focus.search.SearchEngineManager;\nimport org.mozilla.focus.telemetry.TelemetryWrapper;\nimport org.mozilla.focus.utils.AdjustHelper;\n\npublic class FocusApplication extends Application {\n    @Override\n    public void onCreate() {\n        super.onCreate();\n\n        PreferenceManager.setDefaultValues(this, R.xml.settings, false);\n\n        SearchEngineManager.getInstance().init(this);\n\n        TelemetryWrapper.init(this);\n        AdjustHelper.setupAdjustIfNeeded(this);\n    }\n}\n\n\nPlease select the code snippet from Code-A or Code-B with a lower frame rate utilization.\n\n### Response: Code-",
	"classification_left_label": "A",
	"classification_right_prompt": "Below is an instruction that describes a task. Write a response that appropriately completes the request.\n### Instruction:\n\nOnly one of the two code snippets has a lower frame rate.\n\nCode-A:\n\/* -*- Mode: Java; c-basic-offset: 4; tab-width: 20; indent-tabs-mode: nil; -*-\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http:\/\/mozilla.org\/MPL\/2.0\/. *\/\n\npackage org.mozilla.focus;\n\nimport android.app.Application;\nimport android.preference.PreferenceManager;\n\nimport org.mozilla.focus.search.SearchEngineManager;\nimport org.mozilla.focus.telemetry.TelemetryWrapper;\nimport org.mozilla.focus.utils.AdjustHelper;\n\npublic class FocusApplication extends Application {\n    @Override\n    public void onCreate() {\n        super.onCreate();\n\n        PreferenceManager.setDefaultValues(this, R.xml.settings, false);\n\n        SearchEngineManager.getInstance().init(this);\n\n        TelemetryWrapper.init(this);\n        AdjustHelper.setupAdjustIfNeeded(this);\n    }\n}\n\n\nCode-B:\n\/* -*- Mode: Java; c-basic-offset: 4; tab-width: 20; indent-tabs-mode: nil; -*-\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http:\/\/mozilla.org\/MPL\/2.0\/. *\/\n\npackage org.mozilla.focus;\n\nimport android.app.Application;\nimport android.preference.PreferenceManager;\n\nimport org.mozilla.focus.search.SearchEngineManager;\nimport org.mozilla.focus.telemetry.TelemetryWrapper;\nimport org.mozilla.focus.utils.AdjustHelper;\n\npublic class FocusApplication extends Application {\n    @Override\n    public void onCreate() {\n        super.onCreate();\n\n        \/\/ Loading preferences depends on the Search Engine manager, because the default search\n        \/\/ engine pref uses the search engine manager - we therefore need to ensure\n        \/\/ that prefs aren't loaded until search engines are loaded.\n        SearchEngineManager.getInstance().init(this);\n\n        PreferenceManager.setDefaultValues(this, R.xml.settings, false);\n\n        TelemetryWrapper.init(this);\n        AdjustHelper.setupAdjustIfNeeded(this);\n    }\n}\n\n\nPlease select the code snippet from Code-A or Code-B with a lower frame rate utilization.\n\n### Response: Code-",
	"classification_right_label": "B"
}